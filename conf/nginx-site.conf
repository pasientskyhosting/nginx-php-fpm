server {
    listen   80;

    root /var/www/html/web;
    index index.php app.php index.html index.htm;

    server_name _;

    if ($host ~* ^www\.(.*)) {
        set $host_without_www $1;
        rewrite ^(.*) https://$host_without_www$1 permanent;
    }

    set $do_https X;
    if ( $non_local_ip_range ) {
        set $do_https P;
    }

    if ( $http_x_forwarded_proto != 'https' ) {
        set $do_https "${do_https}C";
    }

    if ( $do_https = PC ) {
        return 301 https://$host$request_uri;
    }

    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Container-Name $hostname always;

    location ~* \.(eot|ttf|woff)$ { add_header Access-Control-Allow-Origin '*'; }

    error_page 404 /404.html;
    location = /404.html {
            root /var/www/errors;
            internal;
    }

    error_page 500 /500.html;
    location = /500.html {
            root /var/www/errors;
            internal;
    }

    location ^~ /ngd-style.css {
        alias /var/www/errors/style.css;
        access_log off;
    }

    location ^~ /ngd-sad.svg {
        alias /var/www/errors/sad.svg;
        access_log off;
    }

    location ^~ /healthz {
        try_files $uri /app.php$is_args$args;
        access_log off;
    }

    location ~ ^/(status|ping)$ {
        access_log off;
        allow 127.0.0.1;
        deny all;
        fastcgi_pass phpbackend;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param REMOTE_ADDR $http_x_real_ip;
        fastcgi_param HTTPS $https_map if_not_empty;
        fastcgi_param SERVER_SOFTWARE nginx;
    }

    location /phpinfo.php {
        root /var/www/;
        access_log off;
        allow 127.0.0.1;
        deny all;
        fastcgi_pass phpbackend;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param REMOTE_ADDR $http_x_real_ip;
        fastcgi_param HTTPS $https_map if_not_empty;
        fastcgi_param SERVER_SOFTWARE nginx;
    }

    location ^~ /readiness {
        try_files $uri /app.php$is_args$args;
        access_log off;
    }

    location / {
        try_files $uri /app.php$is_args$args;
    }

    location /build_version.php {
        try_files $uri =404;
        fastcgi_pass phpbackend;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param REMOTE_ADDR $http_x_real_ip;
        fastcgi_param HTTPS $https_map if_not_empty;
        fastcgi_param SERVER_SOFTWARE nginx;
    }

    location /app.php {
        try_files $uri =404;
        fastcgi_pass phpbackend;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param REMOTE_ADDR $http_x_real_ip;
        fastcgi_param HTTPS $https_map if_not_empty;
        fastcgi_param SERVER_SOFTWARE nginx;
        internal;
    }

    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
        expires 5d;
    }

    location ~ /\. {
       log_not_found off;
       deny all;
    }

    location ^~ /.well-known {
        allow all;
        auth_basic off;
    }
}
